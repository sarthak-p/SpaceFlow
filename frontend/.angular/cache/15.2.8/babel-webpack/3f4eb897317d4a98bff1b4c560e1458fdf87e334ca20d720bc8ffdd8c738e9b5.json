{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../user.service\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/forms\";\nexport class AddUserOverlayComponent {\n  constructor(userService, authService) {\n    this.userService = userService;\n    this.authService = authService;\n    this.user = {\n      profile: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        phone: ''\n      },\n      credentials: {\n        username: '',\n        password: ''\n      },\n      isAdmin: false\n    };\n    this.close = new EventEmitter();\n    this.userAdded = new EventEmitter();\n  }\n  onSubmit() {\n    this.authService.getSelectedCompanyId().subscribe(companyId => {\n      if (companyId) {\n        const submission = {\n          profile: this.user.profile,\n          credentials: this.user.credentials,\n          isAdmin: this.user.isAdmin\n        };\n        //console.log(\"Submitting user payload:\", submission);\n        this.userService.addUserToCompany(companyId, submission).subscribe({\n          next: response => {\n            console.log('User added successfully', response);\n            this.onClose();\n            this.userAdded.emit();\n          },\n          error: error => console.error('Error adding user:', error)\n        });\n      } else {\n        console.error('Company ID is missing');\n      }\n    });\n  }\n  onClose() {\n    this.close.emit();\n  }\n}\nAddUserOverlayComponent.ɵfac = function AddUserOverlayComponent_Factory(t) {\n  return new (t || AddUserOverlayComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nAddUserOverlayComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddUserOverlayComponent,\n  selectors: [[\"app-add-user-overlay\"]],\n  outputs: {\n    close: \"close\",\n    userAdded: \"userAdded\"\n  },\n  decls: 27,\n  vars: 9,\n  consts: [[1, \"overlay\"], [1, \"add-user-container\"], [1, \"close-button\", 3, \"click\"], [3, \"ngSubmit\"], [1, \"form-row\"], [\"type\", \"text\", \"placeholder\", \"First Name\", \"name\", \"firstName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Last Name\", \"name\", \"lastName\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"email\", \"placeholder\", \"Email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"tel\", \"placeholder\", \"Phone\", \"name\", \"phone\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"isAdmin\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\"], [\"type\", \"submit\", 1, \"submit-button\"]],\n  template: function AddUserOverlayComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"header\")(3, \"h2\");\n      i0.ɵɵtext(4, \"Add User\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AddUserOverlayComponent_Template_button_click_5_listener() {\n        return ctx.onClose();\n      });\n      i0.ɵɵtext(6, \"X\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function AddUserOverlayComponent_Template_form_ngSubmit_7_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(8, \"div\", 4)(9, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function AddUserOverlayComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.user.profile.firstName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function AddUserOverlayComponent_Template_input_ngModelChange_10_listener($event) {\n        return ctx.user.profile.lastName = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function AddUserOverlayComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.user.profile.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function AddUserOverlayComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.user.profile.phone = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 4)(15, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function AddUserOverlayComponent_Template_input_ngModelChange_15_listener($event) {\n        return ctx.user.credentials.username = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 10);\n      i0.ɵɵlistener(\"ngModelChange\", function AddUserOverlayComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.user.credentials.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 4)(18, \"label\");\n      i0.ɵɵtext(19, \"Make user an admin role?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"select\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function AddUserOverlayComponent_Template_select_ngModelChange_20_listener($event) {\n        return ctx.user.isAdmin = $event;\n      });\n      i0.ɵɵelementStart(21, \"option\", 12);\n      i0.ɵɵtext(22, \"True\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"option\", 12);\n      i0.ɵɵtext(24, \"False\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"button\", 13);\n      i0.ɵɵtext(26, \"Submit\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.profile.firstName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.profile.lastName);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.profile.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.profile.phone);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.credentials.username);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.credentials.password);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.user.isAdmin);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngValue\", true);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngValue\", false);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\".overlay[_ngcontent-%COMP%] {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    background-color: rgba(0, 0, 0, 0.5);\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.add-user-container[_ngcontent-%COMP%] {\\n    background-color: #232D3F;\\n    padding: 20px;\\n    border-radius: 8px;\\n    width: 500px;\\n    border: 1px solid #9EC8B9;\\n    color: #9EC8B9;\\n    font-family: Arial, sans-serif;\\n}\\n\\nheader[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    margin-bottom: 20px;\\n}\\n\\n.close-button[_ngcontent-%COMP%] {\\n    cursor: pointer;\\n    border: none;\\n    background: none;\\n    font-size: 20px;\\n    color: #9EC8B9;\\n}\\n\\n.form-row[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    margin-bottom: 15px;\\n}\\n\\ninput[_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\n    border-bottom: 1px solid #ccc;\\n    padding: 8px;\\n    width: 46%;\\n    background: transparent;\\n    color: #9EC8B9;\\n    border: 1px solid #9EC8B9;\\n    border-radius: 8px; \\n    font-family: Arial, sans-serif;\\n}\\n\\n.submit-button[_ngcontent-%COMP%] {\\n    width: 100%;\\n    background-color: #005B41;\\n    color: #9EC8B9;\\n    padding: 10px;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n    font-size: 16px;\\n}\\n\\n.submit-button[_ngcontent-%COMP%]:hover {\\n    background-color: #008170;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRkLXVzZXItb3ZlcmxheS9hZGQtdXNlci1vdmVybGF5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsTUFBTTtJQUNOLE9BQU87SUFDUCxXQUFXO0lBQ1gsWUFBWTtJQUNaLG9DQUFvQztJQUNwQyxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWix5QkFBeUI7SUFDekIsY0FBYztJQUNkLDhCQUE4QjtBQUNsQzs7QUFFQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLGNBQWM7QUFDbEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsOEJBQThCO0lBQzlCLG1CQUFtQjtBQUN2Qjs7QUFFQTs7SUFFSSw2QkFBNkI7SUFDN0IsWUFBWTtJQUNaLFVBQVU7SUFDVix1QkFBdUI7SUFDdkIsY0FBYztJQUNkLHlCQUF5QjtJQUN6QixrQkFBa0I7SUFDbEIsOEJBQThCO0FBQ2xDOztBQUVBO0lBQ0ksV0FBVztJQUNYLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsYUFBYTtJQUNiLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0IiLCJzb3VyY2VzQ29udGVudCI6WyIub3ZlcmxheSB7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogMDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uYWRkLXVzZXItY29udGFpbmVyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjMyRDNGO1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICAgIHdpZHRoOiA1MDBweDtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOUVDOEI5O1xuICAgIGNvbG9yOiAjOUVDOEI5O1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcbn1cblxuaGVhZGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG4uY2xvc2UtYnV0dG9uIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGNvbG9yOiAjOUVDOEI5O1xufVxuXG4uZm9ybS1yb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG59XG5cbmlucHV0LFxuc2VsZWN0IHtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2NjYztcbiAgICBwYWRkaW5nOiA4cHg7XG4gICAgd2lkdGg6IDQ2JTtcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbiAgICBjb2xvcjogIzlFQzhCOTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOUVDOEI5O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDsgXG4gICAgZm9udC1mYW1pbHk6IEFyaWFsLCBzYW5zLXNlcmlmO1xufVxuXG4uc3VibWl0LWJ1dHRvbiB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNUI0MTtcbiAgICBjb2xvcjogIzlFQzhCOTtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuLnN1Ym1pdC1idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDgxNzA7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","AddUserOverlayComponent","constructor","userService","authService","profile","firstName","lastName","email","phone","credentials","username","password","isAdmin","onSubmit","getSelectedCompanyId","subscribe","companyId","submission","user","addUserToCompany","next","response","console","log","onClose","userAdded","emit","error","close","selectors","outputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/sarthak-p/Desktop/Personal Projects/SpaceFlow/frontend/src/app/add-user-overlay/add-user-overlay.component.ts","/Users/sarthak-p/Desktop/Personal Projects/SpaceFlow/frontend/src/app/add-user-overlay/add-user-overlay.component.html"],"sourcesContent":["import { Component, EventEmitter, Output } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-add-user-overlay',\n  templateUrl: './add-user-overlay.component.html',\n  styleUrls: ['./add-user-overlay.component.css']\n})\nexport class AddUserOverlayComponent {\n\n   user = {\n  profile: {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n  },\n  credentials: {\n    username: '', \n    password: '',\n  },\n  isAdmin: false, \n};\n  \n  constructor(\n  private userService: UserService,\n  private authService: AuthService \n  ) { }\n  \n  @Output() close = new EventEmitter<void>();\n  @Output() userAdded = new EventEmitter<void>();\n\n\n  onSubmit() {\n  this.authService.getSelectedCompanyId().subscribe(companyId => {\n    if (companyId) {\n      const submission = {\n        profile: this.user.profile,\n        credentials: this.user.credentials,\n        isAdmin: this.user.isAdmin\n      };\n\n      //console.log(\"Submitting user payload:\", submission);\n      this.userService.addUserToCompany(companyId, submission).subscribe({\n        next: (response) => {\n          console.log('User added successfully', response);\n          this.onClose(); \n          this.userAdded.emit();\n        },\n        error: (error) => console.error('Error adding user:', error)\n      });\n    } else {\n      console.error('Company ID is missing');\n    }\n  });\n}\n\n  onClose() {\n    this.close.emit();\n  }\n}\n","<div class=\"overlay\">\n    <div class=\"add-user-container\">\n        <header>\n            <h2>Add User</h2>\n            <button class=\"close-button\" (click)=\"onClose()\">X</button>\n        </header>\n        <form (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-row\">\n                <input type=\"text\" placeholder=\"First Name\" name=\"firstName\" [(ngModel)]=\"user.profile.firstName\"\n                    required>\n                <input type=\"text\" placeholder=\"Last Name\" name=\"lastName\" [(ngModel)]=\"user.profile.lastName\" required>\n            </div>\n            <div class=\"form-row\">\n                <input type=\"email\" placeholder=\"Email\" name=\"email\" [(ngModel)]=\"user.profile.email\" required>\n                <input type=\"tel\" placeholder=\"Phone\" name=\"phone\" [(ngModel)]=\"user.profile.phone\" required>\n            </div>\n            <div class=\"form-row\">\n                <input type=\"text\" placeholder=\"Username\" name=\"username\" [(ngModel)]=\"user.credentials.username\"\n                    required>\n                <input type=\"password\" placeholder=\"Password\" name=\"password\" [(ngModel)]=\"user.credentials.password\"\n                    required>\n            </div>\n            <div class=\"form-row\">\n                <label>Make user an admin role?</label>\n                <select name=\"isAdmin\" [(ngModel)]=\"user.isAdmin\">\n                    <option [ngValue]=\"true\">True</option>\n                    <option [ngValue]=\"false\">False</option>\n                </select>\n            </div>\n            <button type=\"submit\" class=\"submit-button\">Submit</button>\n        </form>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}