{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.currentUserSubject = new BehaviorSubject(null);\n    this.currentUser = this.currentUserSubject.asObservable();\n    this.selectedCompanyId = new BehaviorSubject(null);\n  }\n  login(credentials) {\n    return this.http.post('http://localhost:8080/users/login', credentials).pipe(tap(user => this.currentUserSubject.next(user)));\n  }\n  setSelectedCompanyId(companyId) {\n    this.selectedCompanyId.next(companyId);\n  }\n  getSelectedCompanyId() {\n    return this.selectedCompanyId.asObservable();\n  }\n  getCurrentUserId() {\n    return this.currentUserSubject.value?.id || null;\n  }\n  logout() {\n    this.currentUserSubject.next(null);\n    this.selectedCompanyId.next(null);\n  }\n  isAdmin() {\n    return this.currentUserSubject.value?.admin || false;\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,eAAe,QAAQ,MAAM;AAClD,SAASC,GAAG,QAAQ,gBAAgB;;;AAGpC,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJhB,uBAAkB,GAAG,IAAIJ,eAAe,CAAM,IAAI,CAAC;IACpD,gBAAW,GAAG,IAAI,CAACK,kBAAkB,CAACC,YAAY,EAAE;IACnD,sBAAiB,GAAG,IAAIN,eAAe,CAAgB,IAAI,CAAC;EAE5B;EAExCO,KAAK,CAACC,WAAmD;IACvD,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAM,mCAAmC,EAAED,WAAW,CAAC,CAACE,IAAI,CAC/ET,GAAG,CAACU,IAAI,IAAI,IAAI,CAACN,kBAAkB,CAACO,IAAI,CAACD,IAAI,CAAC,CAAC,CAChD;EACH;EAEAE,oBAAoB,CAACC,SAAiB;IACpC,IAAI,CAACC,iBAAiB,CAACH,IAAI,CAACE,SAAS,CAAC;EACxC;EAEAE,oBAAoB;IAClB,OAAO,IAAI,CAACD,iBAAiB,CAACT,YAAY,EAAE;EAC9C;EAEAW,gBAAgB;IACd,OAAO,IAAI,CAACZ,kBAAkB,CAACa,KAAK,EAAEC,EAAE,IAAI,IAAI;EAClD;EAGAC,MAAM;IACJ,IAAI,CAACf,kBAAkB,CAACO,IAAI,CAAC,IAAI,CAAC;IAClC,IAAI,CAACG,iBAAiB,CAACH,IAAI,CAAC,IAAI,CAAC;EACnC;EAEAS,OAAO;IACL,OAAO,IAAI,CAAChB,kBAAkB,CAACa,KAAK,EAAEI,KAAK,IAAI,KAAK;EACtD;;AAjCWpB,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAqB,SAAXrB,WAAW;EAAAsB,YADE;AAAM","names":["BehaviorSubject","tap","AuthService","constructor","http","currentUserSubject","asObservable","login","credentials","post","pipe","user","next","setSelectedCompanyId","companyId","selectedCompanyId","getSelectedCompanyId","getCurrentUserId","value","id","logout","isAdmin","admin","factory","providedIn"],"sourceRoot":"","sources":["/Users/sarthak-p/Desktop/Personal Projects/SpaceFlow/frontend/src/app/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private currentUserSubject = new BehaviorSubject<any>(null);\n  public currentUser = this.currentUserSubject.asObservable();\n  private selectedCompanyId = new BehaviorSubject<number | null>(null);\n\n  constructor(private http: HttpClient) { }\n\n  login(credentials: { username: string; password: string }): Observable<any> {\n    return this.http.post<any>('http://localhost:8080/users/login', credentials).pipe(\n      tap(user => this.currentUserSubject.next(user))\n    );\n  }\n\n  setSelectedCompanyId(companyId: number): void {\n    this.selectedCompanyId.next(companyId);\n  }\n\n  getSelectedCompanyId(): Observable<number | null> {\n    return this.selectedCompanyId.asObservable();\n  }\n\n  getCurrentUserId(): number | null {\n    return this.currentUserSubject.value?.id || null;\n  }\n\n\n  logout(): void {\n    this.currentUserSubject.next(null);\n    this.selectedCompanyId.next(null);\n  }\n\n  isAdmin(): boolean {\n    return this.currentUserSubject.value?.admin || false;\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}