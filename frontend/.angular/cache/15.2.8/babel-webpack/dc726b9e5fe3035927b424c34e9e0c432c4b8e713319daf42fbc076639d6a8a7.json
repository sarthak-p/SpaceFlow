{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"../company.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction SelectCompanyComponent_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const company_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", company_r1.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(company_r1.name);\n  }\n}\nexport class SelectCompanyComponent {\n  constructor(authService, companyService, router) {\n    this.authService = authService;\n    this.companyService = companyService;\n    this.router = router;\n    this.companies = [];\n  }\n  ngOnInit() {\n    this.fetchCompanies();\n  }\n  fetchCompanies() {\n    const isAdmin = this.authService.isAdmin();\n    const userId = this.authService.getCurrentUserId();\n    if (isAdmin) {\n      this.companyService.getCompanies().subscribe({\n        next: companies => this.companies = companies,\n        error: error => console.error('Error fetching companies:', error)\n      });\n    } else if (userId) {\n      this.companyService.getCompaniesForUser(userId).subscribe({\n        next: companies => this.companies = companies,\n        error: error => console.error('Error fetching companies for user:', error)\n      });\n    } else {\n      console.error('User ID is missing');\n    }\n  }\n  onSelectCompany(companyId) {\n    console.log(`Selected Company ID: ${companyId}`);\n    if (companyId) {\n      this.authService.setSelectedCompanyId(companyId);\n      this.router.navigate(['/home', companyId]);\n    }\n  }\n}\nSelectCompanyComponent.ɵfac = function SelectCompanyComponent_Factory(t) {\n  return new (t || SelectCompanyComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.CompanyService), i0.ɵɵdirectiveInject(i3.Router));\n};\nSelectCompanyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SelectCompanyComponent,\n  selectors: [[\"app-select-company\"]],\n  decls: 8,\n  vars: 2,\n  consts: [[1, \"login-container\"], [1, \"form-group\", \"custom-select-wrapper\"], [\"name\", \"company\", 3, \"ngModel\", \"ngModelChange\", \"change\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngValue\"]],\n  template: function SelectCompanyComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Select Company\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"select\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function SelectCompanyComponent_Template_select_ngModelChange_4_listener($event) {\n        return ctx.selectedCompany = $event;\n      })(\"change\", function SelectCompanyComponent_Template_select_change_4_listener() {\n        return ctx.onSelectCompany(ctx.selectedCompany);\n      });\n      i0.ɵɵelementStart(5, \"option\", 3);\n      i0.ɵɵtext(6, \"Pick a company\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(7, SelectCompanyComponent_option_7_Template, 2, 2, \"option\", 4);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedCompany);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.companies);\n    }\n  },\n  dependencies: [i4.NgForOf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel],\n  styles: [\".login-container[_ngcontent-%COMP%] {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    height: 100vh;\\n    color: #9EC8B9;\\n    font-size: 25px;\\n    font-family: Arial, sans-serif;\\n    background-color: #0F0F0F;\\n    font-family: Arial, sans-serif;\\n}\\n\\nh1[_ngcontent-%COMP%], .form-group[_ngcontent-%COMP%] {\\n    text-align: center;\\n}\\n\\nselect[_ngcontent-%COMP%] {\\n    padding: 10px;\\n    margin-top: 10px;\\n    width: 100%;\\n    border-radius: 5px;\\n    border: 1px solid #5C8374;\\n    background-color: #005B41;\\n    color: #88BDBC;\\n    font-size: 16px;\\n}\\n\\nselect[_ngcontent-%COMP%]:focus {\\n    outline: none;\\n    border-color: #88BDBC;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc2VsZWN0LWNvbXBhbnkvc2VsZWN0LWNvbXBhbnkuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixhQUFhO0lBQ2IsY0FBYztJQUNkLGVBQWU7SUFDZiw4QkFBOEI7SUFDOUIseUJBQXlCO0lBQ3pCLDhCQUE4QjtBQUNsQzs7QUFFQTs7SUFFSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIseUJBQXlCO0lBQ3pCLHlCQUF5QjtJQUN6QixjQUFjO0lBQ2QsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixxQkFBcUI7QUFDekIiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW4tY29udGFpbmVyIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGNvbG9yOiAjOUVDOEI5O1xuICAgIGZvbnQtc2l6ZTogMjVweDtcbiAgICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzBGMEYwRjtcbiAgICBmb250LWZhbWlseTogQXJpYWwsIHNhbnMtc2VyaWY7XG59XG5cbmgxLFxuLmZvcm0tZ3JvdXAge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuc2VsZWN0IHtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICM1QzgzNzQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNUI0MTtcbiAgICBjb2xvcjogIzg4QkRCQztcbiAgICBmb250LXNpemU6IDE2cHg7XG59XG5cbnNlbGVjdDpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZTtcbiAgICBib3JkZXItY29sb3I6ICM4OEJEQkM7XG59XG5cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAKgBA,iCAAiE;IAAAA,YAAkB;IAAAA,iBAAS;;;;IAAlDA,uCAAsB;IAACA,eAAkB;IAAlBA,qCAAkB;;;ACMnG,OAAM,MAAOC,sBAAsB;EAIjCC,YACUC,WAAwB,EACxBC,cAA8B,EAC9BC,MAAc;IAFd,gBAAW,GAAXF,WAAW;IACX,mBAAc,GAAdC,cAAc;IACd,WAAM,GAANC,MAAM;IANhB,cAAS,GAAc,EAAE;EAOrB;EAEJC,QAAQ;IACR,IAAI,CAACC,cAAc,EAAE;EACvB;EAEAA,cAAc;IACZ,MAAMC,OAAO,GAAG,IAAI,CAACL,WAAW,CAACK,OAAO,EAAE;IAC1C,MAAMC,MAAM,GAAG,IAAI,CAACN,WAAW,CAACO,gBAAgB,EAAE;IAElD,IAAIF,OAAO,EAAE;MACX,IAAI,CAACJ,cAAc,CAACO,YAAY,EAAE,CAACC,SAAS,CAAC;QAC3CC,IAAI,EAAGC,SAAS,IAAK,IAAI,CAACA,SAAS,GAAGA,SAAS;QAC/CC,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK;OACnE,CAAC;KACH,MAAM,IAAIN,MAAM,EAAE;MACjB,IAAI,CAACL,cAAc,CAACa,mBAAmB,CAACR,MAAM,CAAC,CAACG,SAAS,CAAC;QACxDC,IAAI,EAAGC,SAAS,IAAK,IAAI,CAACA,SAAS,GAAGA,SAAS;QAC/CC,KAAK,EAAGA,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK;OAC5E,CAAC;KACH,MAAM;MACLC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAC;;EAEvC;EAEEG,eAAe,CAACC,SAAkB;IAChCH,OAAO,CAACI,GAAG,CAAC,wBAAwBD,SAAS,EAAE,CAAC;IAChD,IAAIA,SAAS,EAAE;MACb,IAAI,CAAChB,WAAW,CAACkB,oBAAoB,CAACF,SAAS,CAAC;MAChD,IAAI,CAACd,MAAM,CAACiB,QAAQ,CAAC,CAAC,OAAO,EAAEH,SAAS,CAAC,CAAC;;EAE9C;;AAvCWlB,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;QAAtBA,sBAAsB;EAAAsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDXnC3B,8BAA6B;MACrBA,8BAAc;MAAAA,iBAAK;MACvBA,8BAA8C;MAC9BA;QAAA;MAAA,EAA6B;QAAA,OAAW4B,wCAAgC;MAAA,EAA3C;MACjC5B,iCAAmC;MAAAA,8BAAc;MAAAA,iBAAS;MAC1DA,6EAA4F;MAChGA,iBAAS;;;MAHDA,eAA6B;MAA7BA,6CAA6B;MAELA,eAAY;MAAZA,uCAAY","names":["i0","SelectCompanyComponent","constructor","authService","companyService","router","ngOnInit","fetchCompanies","isAdmin","userId","getCurrentUserId","getCompanies","subscribe","next","companies","error","console","getCompaniesForUser","onSelectCompany","companyId","log","setSelectedCompanyId","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/sarthak-p/Desktop/Personal Projects/SpaceFlow/frontend/src/app/select-company/select-company.component.html","/Users/sarthak-p/Desktop/Personal Projects/SpaceFlow/frontend/src/app/select-company/select-company.component.ts"],"sourcesContent":["<div class=\"login-container\">\n    <h1>Select Company</h1>\n    <div class=\"form-group custom-select-wrapper\">\n            <select [(ngModel)]=\"selectedCompany\" (change)=\"onSelectCompany(selectedCompany)\" name=\"company\">\n                <option value=\"\" disabled selected>Pick a company</option>\n                <option *ngFor=\"let company of companies\" [ngValue]=\"company.id\">{{ company.name }}</option>\n            </select>\n        </div>\n    </div>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\nimport { CompanyService } from '../company.service';\nimport { Company } from '../company.model';\n\n@Component({\n  selector: 'app-select-company',\n  templateUrl: './select-company.component.html',\n  styleUrls: ['./select-company.component.css']\n})\nexport class SelectCompanyComponent implements OnInit {\n  companies: Company[] = [];\n  selectedCompany?: number;\n\n  constructor(\n    private authService: AuthService,\n    private companyService: CompanyService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n  this.fetchCompanies();\n}\n\nfetchCompanies(): void {\n  const isAdmin = this.authService.isAdmin(); \n  const userId = this.authService.getCurrentUserId();\n\n  if (isAdmin) {\n    this.companyService.getCompanies().subscribe({\n      next: (companies) => this.companies = companies,\n      error: (error) => console.error('Error fetching companies:', error)\n    });\n  } else if (userId) {\n    this.companyService.getCompaniesForUser(userId).subscribe({\n      next: (companies) => this.companies = companies,\n      error: (error) => console.error('Error fetching companies for user:', error)\n    });\n  } else {\n    console.error('User ID is missing');\n  }\n}\n\n  onSelectCompany(companyId?: number): void {\n    console.log(`Selected Company ID: ${companyId}`); \n    if (companyId) {\n      this.authService.setSelectedCompanyId(companyId);\n      this.router.navigate(['/home', companyId]); \n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}